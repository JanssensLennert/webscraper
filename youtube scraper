using System;
using System.Collections.Generic;
using System.IO;
using Newtonsoft.Json;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;

class Program
{
    static void Main()
    {
        Console.WriteLine("Voer een zoekterm in voor het scrapen van YouTube-video's:");
        string zoekterm = Console.ReadLine();

        List<VideoData> videoDataList = ScrapeYouTube(zoekterm, 5);

        // Data wegschrijven naar JSON-bestand
        string jsonFilePath = "output.json";
        WriteToJsonFile(videoDataList, jsonFilePath);

        // Print de resultaten naar de console
        PrintResults(videoDataList);

        Console.WriteLine($"Scraping voltooid! Resultaten zijn opgeslagen in {jsonFilePath}");
    }

    static List<VideoData> ScrapeYouTube(string zoekterm, int numberOfVideos)
    {
        // Initialisatie van de Selenium-webdriver
        using (IWebDriver driver = new ChromeDriver())
        {
            // Navigeer naar de YouTube-zoekpagina
            driver.Navigate().GoToUrl($"https://www.youtube.com/results?search_query={zoekterm}&sp=CAM%253D");

            // Wacht tot de pagina is geladen (je kunt deze wachttijd aanpassen indien nodig)
            System.Threading.Thread.Sleep(5000);

            // Zoek de video-elementen op de pagina
            IReadOnlyCollection<IWebElement> videoElements = driver.FindElements(By.CssSelector("ytd-video-renderer"));

            List<VideoData> videoDataList = new List<VideoData>();

            // Loop door de video-elementen en haal de nodige gegevens op
            foreach (IWebElement videoElement in videoElements)
            {
                VideoData videoData = new VideoData
                {
                    Link = videoElement.FindElement(By.CssSelector("a#thumbnail")).GetAttribute("href"),
                    Titel = videoElement.FindElement(By.CssSelector("h3")).Text,
                    Uploader = videoElement.FindElement(By.CssSelector("ytd-channel-name a")).Text,
                    AantalWeergaven = videoElement.FindElement(By.CssSelector("span.style-scope.ytd-video-meta-block")).Text
                };

                videoDataList.Add(videoData);

                // Print de resultaten naar de console tijdens het scrapen
                PrintResult(videoData);

                // Stop de lus als het gewenste aantal video's is bereikt
                if (videoDataList.Count >= numberOfVideos)
                    break;
            }

            return videoDataList;
        }
    }

    static void WriteToJsonFile(List<VideoData> videoDataList, string filePath)
    {
        // Serialiseer de lijst met videogegevens naar JSON en schrijf naar het opgegeven bestandspad
        string jsonData = JsonConvert.SerializeObject(videoDataList, Formatting.Indented);
        File.WriteAllText(filePath, jsonData);
    }

    // Print een enkele VideoData naar de console
    static void PrintResult(VideoData videoData)
    {
        Console.WriteLine($"Titel: {videoData.Titel}");
        Console.WriteLine($"Link: {videoData.Link}");
        Console.WriteLine($"Uploader: {videoData.Uploader}");
        Console.WriteLine($"Aantal Weergaven: {videoData.AantalWeergaven}");
        Console.WriteLine("----------------------------------------------");
    }

    // Print de resultatenlijst naar de console
    static void PrintResults(List<VideoData> videoDataList)
    {
        Console.WriteLine("Gescrapete resultaten:");
        Console.WriteLine("----------------------------------------------");

        foreach (var videoData in videoDataList)
        {
            PrintResult(videoData);
        }
    }
}

class VideoData
{
    public string Link { get; set; }
    public string Titel { get; set; }
    public string Uploader { get; set; }
    public string AantalWeergaven { get; set; }
}
